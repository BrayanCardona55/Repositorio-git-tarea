package Huesped;
import Reservas.Reservas;
import Principal.Principal;
import BD.ConexionBD;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
/**
 *
 * @author braya
 */
public final class HuespedI extends javax.swing.JFrame {
    public HuespedI() {
        initComponents();
         // Establece el tamaño del jframe
         setSize(790, 620);
         //Cierra la aplicacion totalmente al cerrar la ventana
         setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
         //Centra la ventana en la pantalla
        setLocationRelativeTo(null);
        cargarDatos();
    }
    public JTable getTablaHuesped() {
    return TablaHuesped;
}
public void cargarDatos() {
    DefaultTableModel model = new DefaultTableModel();

    //  Crea el modelo para la tabla huesped
    model.addColumn("Id");
    model.addColumn("Nombre");
    model.addColumn("Correo");
    model.addColumn("Telefono");

    // Crea el objeto de conexion
    ConexionBD conexionBD = new ConexionBD();

    // Verifica si la conexion funciona
    if (conexionBD.conectar()) {
        // Obtiene la conexion establecida
        Connection conn = conexionBD.getConexion();

        // Crea consulta sql
        String query = "SELECT * FROM huespedes";  
        try (Statement stmt = conn.createStatement(); ResultSet rs = stmt.executeQuery(query)) {
            
            // Llena el modelo de la tabla con los datos obtenidos
            while (rs.next()) {
                Object[] fila = new Object[4];
                fila[0] = rs.getInt("id");
                fila[1] = rs.getString("nombre");
                fila[2] = rs.getString("correo");
                fila[3] = rs.getString("telefono");
                
                model.addRow(fila);  // Agregar fila al modelo
            }
            
            // Establece el modelo en la tabla huesped
            TablaHuesped.setModel(model);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al ejecutar la consulta: " + e.getMessage());
        }
        // Cerrar la conexión a la base de datos
        conexionBD.cerrarConexion();
    } else {
        JOptionPane.showMessageDialog(this, "No se pudo conectar a la base de datos.");
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaHuesped = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        bttprocesar = new javax.swing.JButton();
        txtbuscar = new javax.swing.JTextField();
        bttbuscar = new javax.swing.JButton();
        bttactualizar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar2 = new javax.swing.JMenuBar();
        menuPrincipal = new javax.swing.JMenu();
        MenuInicio = new javax.swing.JMenuItem();
        MenuAgregarReserva = new javax.swing.JMenuItem();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("FrmHuesped"); // NOI18N

        TablaHuesped.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TablaHuesped.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaHuespedMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaHuesped);

        jPanel1.setBackground(java.awt.SystemColor.textHighlight);
        jPanel1.setForeground(java.awt.SystemColor.inactiveCaption);

        bttprocesar.setText("Procesar Huesped");
        bttprocesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttprocesarActionPerformed(evt);
            }
        });

        bttbuscar.setText("Buscar");
        bttbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttbuscarActionPerformed(evt);
            }
        });

        bttactualizar.setText("Actualizar");
        bttactualizar.setToolTipText("");
        bttactualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttactualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bttbuscar)
                .addGap(18, 18, 18)
                .addComponent(bttactualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bttprocesar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bttbuscar)
                    .addComponent(bttprocesar)
                    .addComponent(bttactualizar))
                .addGap(20, 20, 20))
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Lista de huespedes");

        menuPrincipal.setText("Menu");

        MenuInicio.setText("Inicio");
        MenuInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuInicioActionPerformed(evt);
            }
        });
        menuPrincipal.add(MenuInicio);

        MenuAgregarReserva.setText("Agregar Reserva");
        MenuAgregarReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuAgregarReservaActionPerformed(evt);
            }
        });
        menuPrincipal.add(MenuAgregarReserva);

        jMenuBar2.add(menuPrincipal);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 768, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TablaHuespedMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaHuespedMouseClicked
  
    }//GEN-LAST:event_TablaHuespedMouseClicked

    private void bttprocesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttprocesarActionPerformed
 int row = TablaHuesped.getSelectedRow();  // Obtener la fila seleccionada

if (row != -1) {
    // Obtener los datos de la fila seleccionada
    int codigo = Integer.parseInt(TablaHuesped.getValueAt(row, 0).toString());
    String nombre = TablaHuesped.getValueAt(row, 1).toString();
    String correo = TablaHuesped.getValueAt(row, 2).toString();
    String telefono = TablaHuesped.getValueAt(row, 3).toString();

    // Crear una instancia del JDialog (Pasando el JFrame principal como parámetro)
    HuespedDialog dialog = new HuespedDialog(this, true);

    // Formatear el código con ceros a la izquierda (5 dígitos)
    String codigoFormateado = String.format("%05d", codigo);
    
    // Llamar a un método dentro del JDialog para pasarle los datos
    dialog.cargarDatos(codigoFormateado, nombre, correo, telefono);
    
    // Hacer visible el JDialog
    dialog.setVisible(true);
} else {
    JOptionPane.showMessageDialog(this, "Por favor, selecciona una fila de la tabla.");
}
    }//GEN-LAST:event_bttprocesarActionPerformed

    private void bttbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttbuscarActionPerformed
      String criterio = txtbuscar.getText().trim();  
    
    // Verificar que no esté vacío
    if (criterio.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor, ingrese un código o nombre para buscar.");
        return;
    }

    // Crear el modelo de la tabla
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("Id");
    model.addColumn("Nombre");
    model.addColumn("Correo");
    model.addColumn("Telefono");

    ConexionBD conexionBD = new ConexionBD();

    if (conexionBD.conectar()) {
        Connection conn = conexionBD.getConexion();
        Statement stmt = null;
        ResultSet rs = null;

        String query = "";
        if (criterio.matches("\\d+")) { 
            query = "SELECT * FROM huespedes WHERE id LIKE '%" + criterio + "%'"; 
        } else {  
            query = "SELECT * FROM huespedes WHERE nombre LIKE '%" + criterio + "%'"; 
        }

        try {
            stmt = conn.createStatement();
            rs = stmt.executeQuery(query);

         
            while (rs.next()) {
                Object[] fila = new Object[4];
                fila[0] = rs.getInt("id");
                fila[1] = rs.getString("nombre");
                fila[2] = rs.getString("correo");
                fila[3] = rs.getString("telefono");
                model.addRow(fila);
            }

         
            TablaHuesped.setModel(model);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al ejecutar la consulta: " + e.getMessage());
        } finally {
            try {
                if (rs != null) rs.close();
                if (stmt != null) stmt.close();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Error al cerrar la conexión: " + ex.getMessage());
            }
        }

     
        conexionBD.cerrarConexion();
    } else {
        JOptionPane.showMessageDialog(this, "No se pudo conectar a la base de datos.");
    }
    }//GEN-LAST:event_bttbuscarActionPerformed

    private void bttactualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttactualizarActionPerformed
         cargarDatos();
    }//GEN-LAST:event_bttactualizarActionPerformed

    private void MenuInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuInicioActionPerformed
  
        Principal principal = new Principal();  
        principal.setVisible(true);  
        dispose(); 
    }//GEN-LAST:event_MenuInicioActionPerformed

    private void MenuAgregarReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuAgregarReservaActionPerformed
        Reservas dReservas = new Reservas(this,true); 
   dReservas.setVisible(true);
    }//GEN-LAST:event_MenuAgregarReservaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HuespedI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HuespedI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HuespedI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HuespedI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new HuespedI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem MenuAgregarReserva;
    private javax.swing.JMenuItem MenuInicio;
    private javax.swing.JTable TablaHuesped;
    private javax.swing.JButton bttactualizar;
    private javax.swing.JButton bttbuscar;
    private javax.swing.JButton bttprocesar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu menuPrincipal;
    private javax.swing.JTextField txtbuscar;
    // End of variables declaration//GEN-END:variables
}
