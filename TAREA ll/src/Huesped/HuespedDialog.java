package Huesped;

import BD.ConexionBD;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.awt.Point;

public class HuespedDialog extends javax.swing.JDialog {

    /**
     * Creates new form HuedpedDialog
     * @param parent
     * @param modal
     */
    public HuespedDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
// Verifica que el parent sea una instancia de Huespedi
    if (parent instanceof HuespedI frame) {
    Point tablaLocation = frame.getTablaHuesped().getLocationOnScreen();
    setLocation(tablaLocation.x + 30, tablaLocation.y - this.getHeight()-30);
    
}
    }
public void cargarDatos(String codigo, String nombre, String correo, String telefono) {
    // Llenar los campos con los datos recibidos
    lblcodigo.setText(codigo);
    txtnombre.setText(nombre);
    txtcorreo.setText(correo);
    txttelefono.setText(telefono);
    
    
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtnombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        bttagregar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txttelefono = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtcorreo = new javax.swing.JTextField();
        btteliminar = new javax.swing.JButton();
        btteditar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        lblcodigo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(java.awt.SystemColor.inactiveCaption);

        txtnombre.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtnombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnombreActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Nombre:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Codigo:");

        bttagregar.setBackground(new java.awt.Color(204, 255, 204));
        bttagregar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bttagregar.setText("Agregar Huesped");
        bttagregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttagregarActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Telefono:");

        txttelefono.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txttelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttelefonoActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Correo electronico:");

        txtcorreo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtcorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcorreoActionPerformed(evt);
            }
        });

        btteliminar.setBackground(new java.awt.Color(255, 102, 102));
        btteliminar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btteliminar.setText("Eliminar");
        btteliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btteliminarActionPerformed(evt);
            }
        });

        btteditar.setBackground(new java.awt.Color(153, 153, 255));
        btteditar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btteditar.setText("Editar");
        btteditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btteditarActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 255, 204));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setText("Limpiar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lblcodigo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblcodigo.setText("---");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(bttagregar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btteliminar)
                        .addGap(18, 18, 18)
                        .addComponent(btteditar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(txtnombre)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 406, Short.MAX_VALUE))
                    .addComponent(txtcorreo)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(102, 102, 102))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(lblcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txttelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(14, 14, 14))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblcodigo))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(txtcorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(44, 44, 44))
                    .addComponent(txttelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btteliminar, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                    .addComponent(bttagregar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btteditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txttelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttelefonoActionPerformed

    private void txtcorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcorreoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcorreoActionPerformed

    private void txtnombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnombreActionPerformed

    private void bttagregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttagregarActionPerformed
     // Obtiene los datos escritos en los campos
    String nombre = txtnombre.getText();
    String correo = txtcorreo.getText();
    String telefono = txttelefono.getText();

    // Verifica si los campos están vacíos
    if (nombre.isEmpty() || correo.isEmpty() || telefono.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor complete todos los campos.");
    } else {
        // Crear el objeto HuespedModelo con los datos
        HuespedModelo huesped = new HuespedModelo(nombre, correo, telefono);  // Asumimos que no necesitas el código aquí

        // Crear la conexión y el DAO
        ConexionBD conexion = new ConexionBD();
        
        if (conexion.conectar()) {
            // Crear el objeto HuespedDAO con la conexión
            HuespedDAO huespedDAO = new HuespedDAO(conexion.getConexion());
            
            // Intentar agregar el huésped a la base de datos
            boolean resultado = huespedDAO.agregarHuesped(huesped);
            
            if (resultado) {
                // Si el huésped fue agregado correctamente, actualizar la tabla y la interfaz
                ((HuespedI) getParent()).cargarDatos();
                JOptionPane.showMessageDialog(this, "Huésped agregado correctamente.");
                
                // Limpiar los campos de texto después de agregar el huésped
                txtnombre.setText("");
                txtcorreo.setText("");
                txttelefono.setText("");
                
                // Cerrar el JDialog
                dispose();
            } else {
                // Si no se pudo agregar el huésped, mostrar un mensaje de error
                JOptionPane.showMessageDialog(this, "Error al agregar el huésped.");
            }
        } else {
            // Si no se pudo conectar a la base de datos
            JOptionPane.showMessageDialog(this, "No se pudo conectar a la base de datos.");
        } // Si ocurre un error en la consulta o en la conexión
        // Asegurarse de cerrar la conexión cuando ya no se necesita
        conexion.cerrarConexion();
    }
    }//GEN-LAST:event_bttagregarActionPerformed

    private void btteliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btteliminarActionPerformed
 // Obtener el código ingresado en txtCodigo
    String codigoTexto = lblcodigo.getText().trim();

    // Verificar si el campo está vacío
    if (codigoTexto.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Ingrese un código para eliminar.");
        return;
    }

    // Convertir a entero el código del huésped
    int id;
    try {
        id = Integer.parseInt(codigoTexto);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Código inválido. Debe ser un número.");
        return;
    }

    // Crear conexión a la base de datos
    ConexionBD conexionBD = new ConexionBD();
    if (conexionBD.conectar()) {
        HuespedDAO huespedDAO = new HuespedDAO(conexionBD.getConexion()); // Pasar la conexión

        // Intentar eliminar el huésped
        int confirmacion = JOptionPane.showConfirmDialog(this, "¿Está seguro de eliminar este huésped?", "Confirmar eliminación", JOptionPane.YES_NO_OPTION);
        if (confirmacion == JOptionPane.YES_OPTION) {
            if (huespedDAO.eliminarHuesped(id)) {
                 ((HuespedI) getParent()).cargarDatos();  // Actualizar la tabla en el JFrame
                JOptionPane.showMessageDialog(this, "Huésped eliminado con éxito.");              
                lblcodigo.setText("");  // Limpiar el campo de texto
                 // Limpiar los campos de texto después de agregar el huésped
                    txtnombre.setText("");
                    txtcorreo.setText("");
                    txttelefono.setText("");
                     // Actualizar la tabla en el JFrame
           
            // Cerrar el JDialog
            dispose();
            } else {
                JOptionPane.showMessageDialog(this, "No se encontró el huésped con ese código.");
            }
        }
        conexionBD.cerrarConexion();
    } else {
        JOptionPane.showMessageDialog(this, "No se pudo conectar a la base de datos.");
    }
    }//GEN-LAST:event_btteliminarActionPerformed

    private void btteditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btteditarActionPerformed
                                                 
    // Obtener el código ingresado en txtCodigo
    String codigoTexto = lblcodigo.getText().trim();

    // Verificar si el campo está vacío
    if (codigoTexto.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Ingrese un código para editar.");
        return;
    }

    // Convertir a entero el código del huésped
    int codigo;
    try {
        codigo = Integer.parseInt(codigoTexto);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Código inválido. Debe ser un número.");
        return;
    }

    // Obtener los otros datos del huésped
    String nombre = txtnombre.getText().trim();
    String correo = txtcorreo.getText().trim();
    String telefono = txttelefono.getText().trim();

    // Verificar si los otros campos no están vacíos
    if (nombre.isEmpty() || correo.isEmpty() || telefono.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor complete todos los campos.");
        return;
    }

    // Crear el objeto HuespedModelo con los datos actualizados
    HuespedModelo huesped = new HuespedModelo(codigo, nombre, correo, telefono);

    // Crear conexión a la base de datos
    ConexionBD conexionBD = new ConexionBD();
    if (conexionBD.conectar()) {
        HuespedDAO huespedDAO = new HuespedDAO(conexionBD.getConexion());  // Pasar la conexión

        // Intentar editar el huésped
        int confirmacion = JOptionPane.showConfirmDialog(this, "¿Está seguro de editar este huésped?", "Confirmar edición", JOptionPane.YES_NO_OPTION);
        if (confirmacion == JOptionPane.YES_OPTION) {
            if (huespedDAO.editarHuesped(huesped)) {
                ((HuespedI) getParent()).cargarDatos();  // Actualizar la tabla en el JFrame
                JOptionPane.showMessageDialog(this, "Huésped actualizado con éxito.");
                
                // Limpiar los campos después de editar
                lblcodigo.setText("");  
                txtnombre.setText("");
                txtcorreo.setText("");
                txttelefono.setText("");

                // Cerrar el JDialog
                dispose();
            } else {
                JOptionPane.showMessageDialog(this, "No se encontró el huésped con ese código.");
            }
        }
        conexionBD.cerrarConexion();
    } else {
        JOptionPane.showMessageDialog(this, "No se pudo conectar a la base de datos.");
    }
    }//GEN-LAST:event_btteditarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    lblcodigo.setText("");
    txtnombre.setText("");
    txtcorreo.setText("");
    txttelefono.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HuespedDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HuespedDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HuespedDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HuespedDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            HuespedDialog dialog = new HuespedDialog(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttagregar;
    private javax.swing.JButton btteditar;
    private javax.swing.JButton btteliminar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblcodigo;
    private javax.swing.JTextField txtcorreo;
    private javax.swing.JTextField txtnombre;
    private javax.swing.JTextField txttelefono;
    // End of variables declaration//GEN-END:variables
}
